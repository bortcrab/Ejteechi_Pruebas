/*
 * FrmRegistroCliente.java
 */
package pantallas;

import excepciones.RegistrarClienteException;
import dtos.UsuarioDTO;
import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import excepciones.PresentacionException;
import registrarCliente.FacadeRegistrarCliente;
import registrarCliente.IRegistrarCliente;
import utilidades.Validador;

/**
 * Clase que representa la pantalla para que el cliente pueda crear una cuenta.
 *
 * @author Diego Valenzuela Parra - 00000247700
 */
public class FrmRegistroCliente extends javax.swing.JFrame {

    private final IRegistrarCliente facadeRegistrarCliente;

    /**
     * Constructor que el único atributo de la clase.
     */
    public FrmRegistroCliente() {
        initComponents();

        this.facadeRegistrarCliente = new FacadeRegistrarCliente();
    }

    /**
     * Método para mandar a crear una cuenta con los datos introducidos.
     */
    private void crearCuenta() {
        // Obtenemos los datos sin espacios.
        String nombres = txtNombres.getText().trim();
        String apellidoM = txtApellidoP.getText().trim();
        String apellidoP = txtApellidoM.getText().trim();
        String correo = txtCorreo.getText().trim();
        String contrasenia1 = new String(pwdContrasenia.getPassword()).trim();
        String contrasenia2 = new String(pwdConfirmarContrasenia.getPassword()).trim();

        // Creamos una instancia del validador.
        Validador validador = new Validador();
        try {
            // Validamos cada dato.
            validador.validarNombres(nombres);
            validador.validarApellidoP(apellidoP);
            validador.validarApellidoM(apellidoM);
            validador.validarCorreo(correo);
            validador.validarContrasenia(contrasenia1);
            validador.validarConfirmarContrasenia(contrasenia1, contrasenia2);

            // Creamos un usuario DTO con los datos introducidos.
            UsuarioDTO usuario = new UsuarioDTO(nombres, apellidoP, apellidoM, correo, contrasenia1, "cliente");

            // Mandamos a crear la cuenta del cliente.
            usuario = facadeRegistrarCliente.crearCuenta(usuario);

            // Redireccionamos al cliente al home para clientes.
            FrmHomeCliente frmHome = new FrmHomeCliente(usuario);
            frmHome.setVisible(true);
            this.dispose();

            // Mensaje para indicar que la cuenta fue creada.
            JOptionPane.showMessageDialog(this, "¡Cuenta creada con éxito!", "¡Yippee!", JOptionPane.INFORMATION_MESSAGE);
        } catch (PresentacionException | RegistrarClienteException ex) {
            // Si se cacha alguna excepción, imprimimos su mensaje.
            JOptionPane.showMessageDialog(this, ex.getMessage(), "¡Error!", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtNombres = new javax.swing.JTextField();
        txtApellidoP = new javax.swing.JTextField();
        txtApellidoM = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        pwdConfirmarContrasenia = new javax.swing.JPasswordField();
        pwdContrasenia = new javax.swing.JPasswordField();
        btnCrearCuenta = new javax.swing.JButton();
        btnYaTengoCuenta = new javax.swing.JLabel();
        img = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtNombres.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombresActionPerformed(evt);
            }
        });
        jPanel1.add(txtNombres, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, 350, 70));

        txtApellidoP.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtApellidoP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoPActionPerformed(evt);
            }
        });
        jPanel1.add(txtApellidoP, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 210, 350, 70));

        txtApellidoM.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtApellidoM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoMActionPerformed(evt);
            }
        });
        jPanel1.add(txtApellidoM, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 320, 350, 70));

        txtCorreo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoActionPerformed(evt);
            }
        });
        jPanel1.add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 320, 350, 70));

        pwdConfirmarContrasenia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdConfirmarContraseniaActionPerformed(evt);
            }
        });
        jPanel1.add(pwdConfirmarContrasenia, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 440, 350, 70));

        pwdContrasenia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdContraseniaActionPerformed(evt);
            }
        });
        jPanel1.add(pwdContrasenia, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 440, 350, 70));

        btnCrearCuenta.setBackground(new java.awt.Color(133, 175, 218));
        btnCrearCuenta.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnCrearCuenta.setForeground(new java.awt.Color(255, 255, 255));
        btnCrearCuenta.setText("Crear cuenta");
        btnCrearCuenta.setBorder(null);
        btnCrearCuenta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCrearCuentaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCrearCuentaMouseExited(evt);
            }
        });
        btnCrearCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearCuentaActionPerformed(evt);
            }
        });
        jPanel1.add(btnCrearCuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 540, 420, 70));

        btnYaTengoCuenta.setFont(new java.awt.Font("Segoe UI Emoji", 0, 24)); // NOI18N
        btnYaTengoCuenta.setForeground(new java.awt.Color(255, 255, 255));
        btnYaTengoCuenta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnYaTengoCuenta.setText("Ya tengo una cuenta");
        btnYaTengoCuenta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnYaTengoCuentaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnYaTengoCuentaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnYaTengoCuentaMouseExited(evt);
            }
        });
        jPanel1.add(btnYaTengoCuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 620, 240, 30));
        btnYaTengoCuenta.setBorder(BorderFactory.createMatteBorder(0,0,2,0, java.awt.Color.WHITE));

        img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/fondoRegistroCliente.png"))); // NOI18N
        jPanel1.add(img, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 690));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 690));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método que reacciona al evento de dar clic en el botón para crear una
     * cuenta.
     *
     * @param evt Evento al que se escucha.
     */
    private void btnCrearCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearCuentaActionPerformed
        crearCuenta(); // Llamamos al método para crear cuentas.
    }//GEN-LAST:event_btnCrearCuentaActionPerformed

    /**
     * Método que reacciona al evento de pasar el mouse por encima del botón de
     * crear cuenta y cambiar el color del texto.
     *
     * @param evt Evento al que se escucha
     */
    private void btnCrearCuentaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearCuentaMouseEntered
        // TODO add your handling code here:
        btnCrearCuenta.setForeground(Color.darkGray);
    }//GEN-LAST:event_btnCrearCuentaMouseEntered

    /**
     * Método que reacciona al evento de que el mouse ya no esté sobre el botón
     * de crear cuenta y cambiar el color del texto.
     *
     * @param evt Evento al que se escucha
     */
    private void btnCrearCuentaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCrearCuentaMouseExited
        // TODO add your handling code here:
        btnCrearCuenta.setForeground(Color.white);
    }//GEN-LAST:event_btnCrearCuentaMouseExited

    /**
     * Método que reacciona al evento de dar clic en el botón para iniciar
     * sesión.
     *
     * @param evt Evento al que se escucha.
     */
    private void btnYaTengoCuentaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnYaTengoCuentaMouseClicked
        FrmLogin frmLogin = new FrmLogin();
        frmLogin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnYaTengoCuentaMouseClicked

    /**
     * Método que reacciona al evento de pasar el mouse por encima del botón de
     * "Ya tengo una cuenta" y cambiar su color.
     *
     * @param evt Evento al que se escucha
     */
    private void btnYaTengoCuentaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnYaTengoCuentaMouseEntered
        // TODO add your handling code here:
        btnYaTengoCuenta.setForeground(Color.BLACK);
        btnYaTengoCuenta.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.BLACK));
    }//GEN-LAST:event_btnYaTengoCuentaMouseEntered

    /**
     * Método que reacciona al evento de que el mouse ya no esté sobre el botón
     * de "Ya tengo una cuenta" y cambiar su color.
     *
     * @param evt Evento al que se escucha
     */
    private void btnYaTengoCuentaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnYaTengoCuentaMouseExited
        // TODO add your handling code here:
        btnYaTengoCuenta.setForeground(Color.WHITE);
        btnYaTengoCuenta.setBorder(BorderFactory.createMatteBorder(0, 0, 2, 0, Color.WHITE));
    }//GEN-LAST:event_btnYaTengoCuentaMouseExited

    /**
     * Método para que cuando se presione enter se mande a crear la cuenta.
     *
     * @param evt Evento al que se escucha.
     */
    private void txtCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoActionPerformed
        crearCuenta();
    }//GEN-LAST:event_txtCorreoActionPerformed

    /**
     * Método para que cuando se presione enter se mande a crear la cuenta.
     *
     * @param evt Evento al que se escucha.
     */
    private void pwdContraseniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdContraseniaActionPerformed
        crearCuenta();
    }//GEN-LAST:event_pwdContraseniaActionPerformed

    /**
     * Método para que cuando se presione enter se mande a crear la cuenta.
     *
     * @param evt Evento al que se escucha.
     */
    private void pwdConfirmarContraseniaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdConfirmarContraseniaActionPerformed
        crearCuenta();
    }//GEN-LAST:event_pwdConfirmarContraseniaActionPerformed

    /**
     * Método para que cuando se presione enter se mande a crear la cuenta.
     *
     * @param evt Evento al que se escucha.
     */
    private void txtApellidoPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoPActionPerformed
        crearCuenta();
    }//GEN-LAST:event_txtApellidoPActionPerformed

    /**
     * Método para que cuando se presione enter se mande a crear la cuenta.
     *
     * @param evt Evento al que se escucha.
     */
    private void txtNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombresActionPerformed
        crearCuenta();
    }//GEN-LAST:event_txtNombresActionPerformed

    /**
     * Método para que cuando se presione enter se mande a crear la cuenta.
     *
     * @param evt Evento al que se escucha.
     */
    private void txtApellidoMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoMActionPerformed
        crearCuenta();
    }//GEN-LAST:event_txtApellidoMActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearCuenta;
    private javax.swing.JLabel btnYaTengoCuenta;
    private javax.swing.JLabel img;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField pwdConfirmarContrasenia;
    private javax.swing.JPasswordField pwdContrasenia;
    private javax.swing.JTextField txtApellidoM;
    private javax.swing.JTextField txtApellidoP;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables

}
